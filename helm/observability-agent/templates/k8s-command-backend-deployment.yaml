apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "observability-agent.fullname" . }}-k8s-command-backend
  labels:
    {{- include "observability-agent.labels" . | nindent 4 }}
    app.kubernetes.io/component: k8s-command-backend
spec:
  strategy:
    type: Recreate
  replicas: {{ .Values.k8sCommandBackend.replicas }}
  selector:
    matchLabels:
      {{- include "observability-agent.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: k8s-command-backend
  template:
    metadata:
      labels:
        {{- include "observability-agent.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: k8s-command-backend
    spec:
      serviceAccountName: {{ include "observability-agent.fullname" . }}-k8s-command-backend
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: k8s-command-backend
          image: "{{ .Values.global.imageRegistry }}{{ .Values.k8sCommandBackend.image.repository }}:{{ .Values.k8sCommandBackend.image.tag }}"
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          ports:
            - name: http
              containerPort: 5002
              protocol: TCP
          env:
            - name: NATS_URL
              value: nats://{{ include "observability-agent.fullname" . }}-nats:4222
            - name: PORT
              value: "5002"
            - name: NODE_ENV
              value: "production"
            - name: MONGODB_URI
              value: {{ .Values.k8sCommandBackend.mongodb.uri | default (printf "mongodb://%s-mongodb:27017/k8s-command" (include "observability-agent.fullname" .)) | quote }}
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "observability-agent.fullname" . }}-openai
                  key: api_key
            {{- with .Values.k8sCommandBackend.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.k8sCommandBackend.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          {{- if .Values.k8sCommandBackend.persistence.enabled }}
          volumeMounts:
            - name: data
              mountPath: /app/data
          {{- end }}
      {{- if .Values.k8sCommandBackend.persistence.enabled }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "observability-agent.fullname" . }}-k8s-command-backend
      {{- end }}
