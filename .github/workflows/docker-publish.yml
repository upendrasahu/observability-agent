name: Build and Push Docker Images

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        agent:
          - deployment_agent
          - log_agent
          - metric_agent
          - notification_agent
          - postmortem_agent
          - root_cause_agent
          - runbook_agent
          - tracing_agent
          - orchestrator
          - ui_backend
          - ui
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/observability-${{ matrix.agent }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.agent == 'ui_backend' && 'ui/backend' || matrix.agent == 'ui' && 'ui' || '.' }}
          file: ${{ matrix.agent == 'orchestrator' && 'orchestrator/Dockerfile' || matrix.agent == 'ui_backend' && 'ui/backend/Dockerfile' || matrix.agent == 'ui' && 'ui/Dockerfile' || format('agents/{0}/Dockerfile', matrix.agent) }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max