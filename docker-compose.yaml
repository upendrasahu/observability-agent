# File: docker-compose.yaml
version: '3.9'
services:
  nats:
    image: nats:latest
    ports:
      - "4222:4222"  # Client connections
      - "8222:8222"  # HTTP monitoring
    command: "--jetstream"
    volumes:
      - nats-data:/data
    environment:
      - NATS_SERVER_NAME=observability-agent-nats

  orchestrator:
    build: ./orchestrator
    depends_on:
      - nats
    environment:
      - NATS_URL=nats://nats:4222
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o}

  metric_agent:
    build: ./agents/metric_agent
    depends_on:
      - nats
    environment:
      - NATS_URL=nats://nats:4222
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o}

  log_agent:
    build: ./agents/log_agent
    depends_on:
      - nats
    volumes:
      - ${HOME}/.kube:/root/.kube:ro
    environment:
      - NATS_URL=nats://nats:4222
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o}
      - KUBECONFIG=/root/.kube/config

  deployment_agent:
    build: ./agents/deployment_agent
    depends_on:
      - nats
    volumes:
      - ${HOME}/.kube:/root/.kube:ro
    environment:
      - NATS_URL=nats://nats:4222
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o}
      - KUBECONFIG=/root/.kube/config

  root_cause_agent:
    build: ./agents/root_cause_agent
    depends_on:
      - nats
    environment:
      - NATS_URL=nats://nats:4222
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o}

  tracing_agent:
    build: ./agents/tracing_agent
    depends_on:
      - nats
    environment:
      - NATS_URL=nats://nats:4222
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o}

  runbook_agent:
    build: ./agents/runbook_agent
    depends_on:
      - nats
    volumes:
      - ${HOME}/.kube:/root/.kube:ro
    environment:
      - NATS_URL=nats://nats:4222
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o}
      - KUBECONFIG=/root/.kube/config

  notification_agent:
    build: ./agents/notification_agent
    depends_on:
      - nats
    environment:
      - NATS_URL=nats://nats:4222
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o}

  postmortem_agent:
    build: ./agents/postmortem_agent
    depends_on:
      - nats
    environment:
      - NATS_URL=nats://nats:4222
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o}

  ui_backend:
    build: ./ui/backend
    ports:
      - "5000:5000"
    environment:
      - NATS_URL=nats://nats:4222

  ui:
    build: ./ui
    ports:
      - "8080:80"
    depends_on:
      - orchestrator
      - ui_backend
      - k8s_command_backend
    environment:
      - BACKEND_SERVICE_URL=http://ui_backend:5000
      - K8S_COMMAND_SERVICE_URL=http://k8s_command_backend:5002

  mongodb:
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=k8s-command

  k8s_command_backend:
    build: ./ui/k8s-command-backend
    ports:
      - "5002:5002"
    depends_on:
      - nats
      - mongodb
    volumes:
      - ${HOME}/.kube:/root/.kube:ro
    environment:
      - NATS_URL=nats://nats:4222
      - MONGODB_URI=mongodb://mongodb:27017/k8s-command
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - KUBECONFIG=/root/.kube/config

volumes:
  nats-data:
  mongodb-data: